apply plugin: 'java'
apply plugin: 'eclipse'
apply plugin: 'idea'

description = 'A Java distributed system'

version = 1.5
sourceCompatibility = 1.8
targetCompatibility = 1.8

ant.importBuild 'build.xml'

ext {
    releaseDirectory = new File('release').getAbsolutePath()
    popjavac = new File('popjavac').getAbsolutePath()
}

repositories {
    mavenCentral()
}

sourceSets {
    main {
        java {
            srcDirs = [ 'workspace/popjava/src' ]
        }
        resources {
            srcDirs = [ 'workspace/resources' ]
        }
    }
    test {
        java {
            srcDirs = [ 'workspace/popjava/test' ]
        }
    }
}

dependencies {
    compile group: 'org.javassist',    name: 'javassist',      version: '3.+'
    compile group: 'org.slf4j',        name: 'slf4j-nop',      version: '1.7.+'
    compile group: 'org.yaml',         name: 'snakeyaml',      version: '1.+'
    compile group: 'com.hierynomus',   name: 'sshj',           version: '0.21.1'
    compile group: 'org.bouncycastle', name: 'bcprov-jdk15on', version: '1.58'
    compile group: 'org.bitlet', 	   name: 'weupnp', 		   version: '0.1.4+'
    
    testCompile group: 'junit', name: 'junit', version: '4.+'
    testCompile group: 'com.carrotsearch', name: 'junit-benchmarks', version: '0.7.2'
}

test {    
    useJUnit()
    
    testLogging.showStandardStreams = true
    minHeapSize = "128m"
    maxHeapSize = "512m"
    
    // use only define suite
    include '**/AllTests.class'
    scanForTestClasses false
    
    beforeTest { 
        descriptor -> logger.lifecycle(descriptor.toString())
    }
}

clean {
    delete 'build'
    delete 'logFolder'
    delete releaseDirectory
}

task fatJar(type: Jar, dependsOn: [ classes ], group: 'build', description: 'Assembles a jar with all the dependencies') {
    manifest {
        attributes 'Premain-Class': 'ch.icosys.popjava.core.javaagent.POPJavaAgent',
            'Can-Redefine-Classes': true,
            'Can-Retransform-Classes': true,
            'Can-Set-Native-Method-Prefix': true
    }
    baseName = project.name + '-all'
    from { configurations.compile.collect { it.isDirectory() ? it : zipTree(it) } }
    // don't add signed jar checks and tests to jar
    exclude 'META-INF/*.RSA', 'META-INF/*.SF','META-INF/*.DSA', 'junit/*', 'testsuite/*'
    with jar

    doLast {
        copy {
            from 'build/libs'
            into 'build'
            include project.name + '-all-' + version + '.jar'
            rename (project.name + '-all-' + version + '.jar', 'popjava.jar')
        }
    }
}

task jarTestsuite(type: Jar, dependsOn: [ testClasses ], group: 'build', description: 'Assembles a jar with all the testsuite classes') {
    baseName = project.name + '-testsuite'
    from sourceSets.test.output
    include 'testsuite/**'
    with jar
    
    doLast {
        copy {
            from 'build/libs'
            into 'build'
            include project.name + '-testsuite-' + version + '.jar'
            rename (project.name + '-testsuite-' + version + '.jar', 'testsuite.jar')
        }
    }
}

task prepareRelease(dependsOn: [ fatJar, jarTestsuite, javadoc ], group: 'help', description: 'Make the release folder for the installation script.') {
    doLast {
        mkdir releaseDirectory
        mkdir releaseDirectory + '/bin'
        mkdir releaseDirectory + '/etc'
        mkdir releaseDirectory + '/doc'
        mkdir releaseDirectory + '/plugin'
        mkdir releaseDirectory + '/JarFile'
        mkdir releaseDirectory + '/logFolder'
        mkdir releaseDirectory + '/testsuite'
        
        // change directory access with ant
        ant.chmod(
            file: releaseDirectory + '/logFolder',
            perm: 777,
            type: 'both'
        )
        
        // copy files
        copy {
            from popjavac
            into releaseDirectory + '/bin'
            include 'popjrun'
            include 'popjc'
            fileMode 0755
        }
        copy {
            from popjavac + '/xml'
            into releaseDirectory + '/etc'
            include 'additional-parser-infos.xsd'
        }
        copy {
            from projectDir
            into releaseDirectory
            include 'launch_testsuite'
            fileMode 0755
        }
        copy {
            from 'build/docs/javadoc'
            into releaseDirectory + '/doc'
        }
        copy {
            from 'build'
            from popjavac + '/popjparser'
            into releaseDirectory + '/JarFile'
            include 'popjava.jar'
            include 'testsuite.jar'
            include 'popjparser.jar'
        }
        copy {
            from 'etc'
            into releaseDirectory + '/etc'
        }
        copy {
            from 'plugin'
            into releaseDirectory + '/plugin'
        }
        copy {
            from 'workspace/popjava/test/ch/icosys/popjava/testsuite'
            into releaseDirectory + '/testsuite'
            include 'popc-obj'
            include 'popc-obj/**'
        }
    }
}

artifacts {
    archives fatJar
    archives jarTestsuite
}

